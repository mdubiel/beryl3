# Generated by Django 5.2 on 2025-07-18 19:55

from django.db import migrations
from django.contrib.auth import get_user_model

def create_initial_item_types(apps, schema_editor):
    """Create initial item types with basic attributes"""
    ItemType = apps.get_model('web', 'ItemType')
    ItemAttribute = apps.get_model('web', 'ItemAttribute')
    CollectionItem = apps.get_model('web', 'CollectionItem')
    
    # Create generic item type
    generic_type = ItemType.objects.create(
        name="generic",
        display_name="Generic Item",
        description="Default item type for items without specific category",
        icon="package"
    )
    
    # Set all existing items to generic type
    CollectionItem.objects.filter(item_type__isnull=True).update(item_type=generic_type)
    
    # Create basic item types
    item_types_data = [
        {
            "name": "book",
            "display_name": "Book",
            "description": "Books, novels, textbooks, etc.",
            "icon": "book",
            "attributes": [
                {"name": "author", "display_name": "Author", "type": "TEXT", "order": 1},
                {"name": "isbn", "display_name": "ISBN", "type": "TEXT", "order": 2},
                {"name": "publication_year", "display_name": "Publication Year", "type": "NUMBER", "order": 3},
                {"name": "genre", "display_name": "Genre", "type": "TEXT", "order": 4},
                {"name": "pages", "display_name": "Number of Pages", "type": "NUMBER", "order": 5},
            ]
        },
        {
            "name": "lego_set",
            "display_name": "LEGO Set",
            "description": "LEGO building sets",
            "icon": "blocks",
            "attributes": [
                {"name": "set_number", "display_name": "Set Number", "type": "TEXT", "order": 1},
                {"name": "piece_count", "display_name": "Piece Count", "type": "NUMBER", "order": 2},
                {"name": "theme", "display_name": "Theme", "type": "TEXT", "order": 3},
                {"name": "release_year", "display_name": "Release Year", "type": "NUMBER", "order": 4},
                {"name": "minifigures", "display_name": "Minifigures Count", "type": "NUMBER", "order": 5},
            ]
        },
        {
            "name": "vinyl",
            "display_name": "Vinyl Record",
            "description": "Vinyl records and albums",
            "icon": "disc",
            "attributes": [
                {"name": "artist", "display_name": "Artist", "type": "TEXT", "order": 1},
                {"name": "album", "display_name": "Album", "type": "TEXT", "order": 2},
                {"name": "release_year", "display_name": "Release Year", "type": "NUMBER", "order": 3},
                {"name": "genre", "display_name": "Genre", "type": "TEXT", "order": 4},
                {"name": "label", "display_name": "Record Label", "type": "TEXT", "order": 5},
                {"name": "rpm", "display_name": "RPM", "type": "CHOICE", "choices": ["33", "45", "78"], "order": 6},
            ]
        },
        {
            "name": "comic",
            "display_name": "Comic Book",
            "description": "Comic books and graphic novels",
            "icon": "book-open",
            "attributes": [
                {"name": "series", "display_name": "Series", "type": "TEXT", "order": 1},
                {"name": "issue_number", "display_name": "Issue Number", "type": "TEXT", "order": 2},
                {"name": "writer", "display_name": "Writer", "type": "TEXT", "order": 3},
                {"name": "artist", "display_name": "Artist", "type": "TEXT", "order": 4},
                {"name": "publication_date", "display_name": "Publication Date", "type": "DATE", "order": 5},
                {"name": "publisher", "display_name": "Publisher", "type": "TEXT", "order": 6},
            ]
        },
        {
            "name": "board_game",
            "display_name": "Board Game",
            "description": "Board games and tabletop games",
            "icon": "dices",
            "attributes": [
                {"name": "designer", "display_name": "Designer", "type": "TEXT", "order": 1},
                {"name": "publisher", "display_name": "Publisher", "type": "TEXT", "order": 2},
                {"name": "year_published", "display_name": "Year Published", "type": "NUMBER", "order": 3},
                {"name": "min_players", "display_name": "Min Players", "type": "NUMBER", "order": 4},
                {"name": "max_players", "display_name": "Max Players", "type": "NUMBER", "order": 5},
                {"name": "play_time", "display_name": "Play Time (minutes)", "type": "NUMBER", "order": 6},
                {"name": "complexity", "display_name": "Complexity", "type": "CHOICE", "choices": ["Light", "Medium", "Heavy"], "order": 7},
            ]
        },
        {
            "name": "warhammer",
            "display_name": "Warhammer Miniature",
            "description": "Warhammer miniatures and models",
            "icon": "sword",
            "attributes": [
                {"name": "army", "display_name": "Army", "type": "TEXT", "order": 1},
                {"name": "unit_type", "display_name": "Unit Type", "type": "TEXT", "order": 2},
                {"name": "game_system", "display_name": "Game System", "type": "CHOICE", "choices": ["40K", "Age of Sigmar", "30K", "Kill Team"], "order": 3},
                {"name": "points_cost", "display_name": "Points Cost", "type": "NUMBER", "order": 4},
                {"name": "painted", "display_name": "Painted", "type": "BOOLEAN", "order": 5},
                {"name": "based", "display_name": "Based", "type": "BOOLEAN", "order": 6},
            ]
        },
    ]
    
    # Create item types and their attributes
    for item_data in item_types_data:
        item_type = ItemType.objects.create(
            name=item_data["name"],
            display_name=item_data["display_name"],
            description=item_data["description"],
            icon=item_data["icon"]
        )
        
        for attr_data in item_data["attributes"]:
            ItemAttribute.objects.create(
                item_type=item_type,
                name=attr_data["name"],
                display_name=attr_data["display_name"],
                attribute_type=attr_data["type"],
                order=attr_data["order"],
                choices=attr_data.get("choices")
            )

def reverse_create_initial_item_types(apps, schema_editor):
    """Remove the created item types"""
    ItemType = apps.get_model('web', 'ItemType')
    ItemType.objects.all().delete()


class Migration(migrations.Migration):

    dependencies = [
        ("web", "0009_collectionitem_attributes_itemtype_and_more"),
    ]

    operations = [
        migrations.RunPython(create_initial_item_types, reverse_create_initial_item_types),
    ]
