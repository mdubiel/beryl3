# Generated by Django 5.2 on 2025-07-24 08:27

import django.db.models.deletion
import nanoid_field.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("web", "0012_linkpattern_collectionitemlink"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="MediaFile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "hash",
                    nanoid_field.fields.NanoidField(
                        alphabet="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz-",
                        editable=False,
                        max_length=10,
                        unique=True,
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date created"
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(auto_now=True, verbose_name="Date updated"),
                ),
                ("name", models.CharField(max_length=200, verbose_name="Name")),
                ("is_deleted", models.BooleanField(default=False)),
                (
                    "file_path",
                    models.CharField(max_length=500, verbose_name="File Path"),
                ),
                (
                    "original_filename",
                    models.CharField(max_length=255, verbose_name="Original Filename"),
                ),
                (
                    "file_size",
                    models.BigIntegerField(
                        blank=True, null=True, verbose_name="File Size (bytes)"
                    ),
                ),
                (
                    "content_type",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Content Type",
                    ),
                ),
                (
                    "media_type",
                    models.CharField(
                        choices=[
                            ("COLLECTION_HEADER", "Collection Header Image"),
                            ("COLLECTION_ITEM", "Collection Item Image"),
                            ("AVATAR", "User Avatar"),
                            ("OTHER", "Other Media"),
                        ],
                        db_index=True,
                        default="OTHER",
                        max_length=20,
                        verbose_name="Media Type",
                    ),
                ),
                (
                    "storage_backend",
                    models.CharField(
                        choices=[
                            ("LOCAL", "Local Filesystem"),
                            ("GCS", "Google Cloud Storage"),
                            ("S3", "Amazon S3"),
                        ],
                        db_index=True,
                        max_length=10,
                        verbose_name="Storage Backend",
                    ),
                ),
                (
                    "file_exists",
                    models.BooleanField(
                        default=True, verbose_name="File Exists in Storage"
                    ),
                ),
                (
                    "last_verified",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Last Verified"
                    ),
                ),
                (
                    "width",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Image Width"
                    ),
                ),
                (
                    "height",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Image Height"
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(
                        blank=True, default=dict, verbose_name="Additional Metadata"
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Media File",
                "verbose_name_plural": "Media Files",
                "ordering": ["-created"],
                "indexes": [
                    models.Index(
                        fields=["media_type", "storage_backend"],
                        name="web_mediafi_media_t_eef878_idx",
                    ),
                    models.Index(
                        fields=["file_exists", "last_verified"],
                        name="web_mediafi_file_ex_110a6b_idx",
                    ),
                ],
            },
        ),
    ]
