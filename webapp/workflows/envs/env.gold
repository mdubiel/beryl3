# ==============================================================================
# BERYL3 GOLDEN ENVIRONMENT CONFIGURATION
# ==============================================================================
# This is the single source of truth for all environment variables.
# 
# ⚠️  IMPORTANT: All new environment variables MUST be added here first!
# 
# After adding variables here, run:
#   uv run python workflows/bin/sync-env-files.py [local|qa|prod]
#
# Environment applicability:
#   🏠 DEV  = Development (local)
#   🧪 QA   = QA environment (Cloud Run)
#   🚀 PROD = Production environment (Cloud Run)
# ==============================================================================

# ==============================================================================
# CORE DJANGO SETTINGS
# ==============================================================================

# Django Secret Key (REQUIRED)
# 🏠 DEV: Development key (insecure)
# 🧪 QA: Generate secure key for QA
# 🚀 PROD: Generate unique secure key for production
# Generate with: python -c 'from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())'
SECRET_KEY=django-insecure-change-this-in-production

# Debug Mode (REQUIRED)
# 🏠 DEV: True (enable development features)
# 🧪 QA: False (production-like testing)
# 🚀 PROD: False (security)
DEBUG=True

# Allowed Hosts (REQUIRED)
# 🏠 DEV: localhost,127.0.0.1,*
# 🧪 QA: beryl3-qa.example.com,localhost
# 🚀 PROD: beryl.com,www.beryl.com
ALLOWED_HOSTS=localhost,127.0.0.1

# Site Domain (REQUIRED)
# 🏠 DEV: beryl3.localdomain
# 🧪 QA: beryl3-qa.example.com
# 🚀 PROD: beryl.com
SITE_DOMAIN=beryl3.localdomain

# CSRF Trusted Origins
# 🏠 DEV: http://localhost:8000,http://127.0.0.1:8000
# 🧪 QA: https://beryl3-qa.mdubiel.org,https://*.run.app
# 🚀 PROD: https://beryl.com,https://www.beryl.com
CSRF_TRUSTED_ORIGINS=http://localhost:8000

# ==============================================================================
# DATABASE CONFIGURATION
# ==============================================================================

# Database Engine (REQUIRED)
# 🏠 DEV: django.db.backends.sqlite3 (SQLite for development)
# 🧪 QA: django.db.backends.postgresql (PostgreSQL Cloud SQL)
# 🚀 PROD: django.db.backends.postgresql (PostgreSQL Cloud SQL)
DB_ENGINE=django.db.backends.sqlite3

# PostgreSQL Settings (used when DB_ENGINE is postgresql)
# 🏠 DEV: Not used with SQLite
# 🧪 QA: beryl3-qa
# 🚀 PROD: Production database credentials
PG_DB=beryl3_db

# 🏠 DEV: Not used with SQLite
# 🧪 QA: beryl3-qa
# 🚀 PROD: Production database user
PG_USER=beryl3_user

# 🏠 DEV: Not used with SQLite
# 🧪 QA: Qa-Pass123!
# 🚀 PROD: Production database password
PG_PASSWORD=secure_password_change_this

# 🏠 DEV: Not used with SQLite
# 🧪 QA: 34.65.226.196
# 🚀 PROD: Production database host
PG_HOST=localhost

PG_PORT=5432

# ==============================================================================
# FEATURE FLAGS SYSTEM
# ==============================================================================
# These override DEBUG-based defaults and control application features

# Google Cloud Storage
# 🏠 DEV: False (use local filesystem)
# 🧪 QA: True (use Google Cloud Storage)
# 🚀 PROD: True (use Google Cloud Storage)
USE_GCS_STORAGE=False

# Email Backend
# 🏠 DEV: True (use Inbucket for testing)
# 🧪 QA: False (use SMTP/Resend)
# 🚀 PROD: False (use SMTP/Resend)
USE_INBUCKET=True

# Loki Log Forwarding
# 🏠 DEV: False (disabled for development)
# 🧪 QA: False (use Google Cloud Logging)
# 🚀 PROD: False (use Google Cloud Logging)
LOKI_ENABLED=False

# Google Cloud Logging
# 🏠 DEV: False (use local logging)
# 🧪 QA: True (enable cloud logging)
# 🚀 PROD: True (enable cloud logging)
USE_GOOGLE_CLOUD_LOGGING=False

# Browser Auto-Reload (Development)
# 🏠 DEV: True (enable for development)
# 🧪 QA: False (disable for stability)
# 🚀 PROD: False (disable for production)
BROWSER_RELOAD=True

# Django Debug Toolbar
# 🏠 DEV: False (enable manually if needed)
# 🧪 QA: False (disable for testing)
# 🚀 PROD: False (disable for security)
DJANGO_TOOLBAR=False

# Application Activity Logging
# 🏠 DEV: True (helpful for development)
# 🧪 QA: True (needed for testing)
# 🚀 PROD: True (required for audit)
APPLICATION_ACTIVITY_LOGGING=True

# ==============================================================================
# EMAIL CONFIGURATION
# ==============================================================================

# Email Host
# 🏠 DEV: localhost (Inbucket)
# 🧪 QA: smtp.resend.com
# 🚀 PROD: smtp.resend.com
EMAIL_HOST=localhost

# Email Port
# 🏠 DEV: 2500 (Inbucket SMTP port)
# 🧪 QA: 587 (SMTP with TLS)
# 🚀 PROD: 587 (SMTP with TLS)
EMAIL_PORT=587

# Email TLS
# 🏠 DEV: False (Inbucket doesn't require TLS)
# 🧪 QA: True (required for SMTP)
# 🚀 PROD: True (required for SMTP)
EMAIL_USE_TLS=False

# Email Authentication
# 🏠 DEV: Not required for Inbucket
# 🧪 QA: resend
# 🚀 PROD: resend
EMAIL_HOST_USER=

# Email Password (SMTP API Key)
# 🏠 DEV: Not required for Inbucket
# 🧪 QA: Resend API key for QA
# 🚀 PROD: Resend API key for production
EMAIL_HOST_PASSWORD=

# Default From Email
# 🏠 DEV: "Beryl3 Dev <dev@beryl3.localdomain>"
# 🧪 QA: "Beryl3 QA <qa@beryl3-qa.mdubiel.org>"
# 🚀 PROD: "Beryl3 <noreply@beryl.com>"
DEFAULT_FROM_EMAIL="Beryl3 Dev <dev@beryl3.localdomain>"

# Inbucket Development Settings
# 🏠 DEV: Inbucket ports for local testing
# 🧪 QA: Not used
# 🚀 PROD: Not used
INBUCKET_WEB_PORT=9000
INBUCKET_SMTP_PORT=2500

# Resend API Configuration for Marketing Emails
# 🏠 DEV: re_fqw6u5mD_LKB86qWFDySKaPTEPBpdzJMZ
# 🧪 QA: re_fqw6u5mD_LKB86qWFDySKaPTEPBpdzJMZ (shared with PROD)
# 🚀 PROD: re_fqw6u5mD_LKB86qWFDySKaPTEPBpdzJMZ
RESEND_API_KEY=re_fqw6u5mD_LKB86qWFDySKaPTEPBpdzJMZ

# Resend Marketing Audience ID
# 🏠 DEV: 01f8fa37-6d40-4f54-b59e-f8fc465898e2
# 🧪 QA: 01f8fa37-6d40-4f54-b59e-f8fc465898e2 (shared with PROD)
# 🚀 PROD: 01f8fa37-6d40-4f54-b59e-f8fc465898e2
RESEND_MARKETING_AUDIENCE_ID=01f8fa37-6d40-4f54-b59e-f8fc465898e2

# Marketing Email Default Opt-in Behavior
# 🏠 DEV: True (opt-in by default for testing)
# 🧪 QA: True (opt-in by default)
# 🚀 PROD: True (opt-in by default)
MARKETING_EMAIL_DEFAULT_OPT_IN=True

# Resend Sync Status Timeout (minutes)
# 🏠 DEV: 15 (timeout threshold for sync status warning)
# 🧪 QA: 30 (longer timeout for qa environment)
# 🚀 PROD: 60 (production timeout threshold)
RESEND_SYNC_TIMEOUT_MINUTES=15

# ==============================================================================
# GOOGLE CLOUD STORAGE CONFIGURATION
# ==============================================================================

# GCS Bucket Name
# 🏠 DEV: beryl3_dev (personal dev bucket)
# 🧪 QA: beryl3-qa-bucket
# 🚀 PROD: beryl3-prod-bucket
GCS_BUCKET_NAME=beryl3_dev

# GCS Project ID
# 🏠 DEV: Personal development project
# 🧪 QA: beryl3 (QA project)
# 🚀 PROD: beryl3-prod (production project)
GCS_PROJECT_ID=beryl3

# GCS Location (path within bucket)
# 🏠 DEV: media
# 🧪 QA: media
# 🚀 PROD: media
GCS_LOCATION=media

# GCS Credentials Path
# 🏠 DEV: /home/mdubiel/projects/beryl3/webapp/workflows/envs/credentials/gcs_keys/mateusz-344213-5c136b4db5c3.json
# 🧪 QA: /home/mdubiel/projects/beryl3/webapp/workflows/envs/credentials/gcs_keys/beryl3-qa-storage.json
# 🚀 PROD: /app/gcs-key.json (in container)
GCS_CREDENTIALS_PATH=/path/to/service-account-key.json

# Static Files URL (when using GCS)
# 🏠 DEV: Generated automatically
# 🧪 QA: https://storage.googleapis.com/beryl3-qa-bucket/statics/
# 🚀 PROD: https://storage.googleapis.com/beryl3-prod-bucket/static/
STATIC_URL=/static/

# Media Files URL (when using GCS)
# 🏠 DEV: Generated automatically
# 🧪 QA: https://storage.googleapis.com/beryl3-qa-bucket/media/
# 🚀 PROD: https://storage.googleapis.com/beryl3-prod-bucket/media/
MEDIA_URL=/media/

# ==============================================================================
# MONITORING AND LOGGING
# ==============================================================================


# Loki Log Aggregation URL
# 🏠 DEV: http://localhost:3100 (local Loki)
# 🧪 QA: Not used (Google Cloud Logging)
# 🚀 PROD: Not used (Google Cloud Logging)
LOKI_URL=http://localhost:3100

# Google Cloud Logging Configuration
# 🏠 DEV: Not used
# 🧪 QA: beryl3
# 🚀 PROD: beryl3-prod
GOOGLE_CLOUD_LOGGING_PROJECT_ID=

# Google Cloud Logging Resource Type
# 🏠 DEV: Not used
# 🧪 QA: cloud_run_revision
# 🚀 PROD: cloud_run_revision
GOOGLE_CLOUD_LOGGING_RESOURCE_TYPE=cloud_run_revision

# Google Cloud Logging Credentials
# 🏠 DEV: Not used
# 🧪 QA: /app/gcs-key.json
# 🚀 PROD: /app/gcs-key.json
GOOGLE_CLOUD_LOGGING_CREDENTIALS_PATH=

# ==============================================================================
# GOOGLE CLOUD PROJECT CONFIGURATION
# ==============================================================================

# GCP Project Information
# 🏠 DEV: Not used
# 🧪 QA: beryl3
# 🚀 PROD: beryl3-prod
GCP_PROJECT_ID=

# 🏠 DEV: Not used
# 🧪 QA: europe-west6
# 🚀 PROD: Production region
GCP_REGION=

# 🏠 DEV: Not used
# 🧪 QA: europe-west6-a
# 🚀 PROD: Production zone
GCP_ZONE=

# Database Instance Information
# 🏠 DEV: Not used
# 🧪 QA: beryl3-qa
# 🚀 PROD: Production instance name
DB_INSTANCE_NAME=

# 🏠 DEV: Not used
# 🧪 QA: beryl3:europe-west6:beryl3-qa
# 🚀 PROD: Production connection name
DB_CONNECTION_NAME=

# GCS Service Account Details
# 🏠 DEV: Not used
# 🧪 QA: beryl3-qa-storage@beryl3.iam.gserviceaccount.com
# 🚀 PROD: Production service account
GCS_SERVICE_ACCOUNT=

# 🏠 DEV: Not used
# 🧪 QA: beryl3-qa-storage.json
# 🚀 PROD: Production key file
GCS_KEY_FILE=

# Additional GCS URLs
# 🏠 DEV: Not used
# 🧪 QA: https://storage.googleapis.com/beryl3-qa-bucket/
# 🚀 PROD: Production bucket URL
GCS_BUCKET_URL=

# 🏠 DEV: Not used
# 🧪 QA: https://console.cloud.google.com/storage/browser/beryl3-qa-bucket?project=beryl3
# 🚀 PROD: Production console URL
GCS_CONSOLE_URL=

# Docker image configuration
# 🏠 DEV: Not used
# 🧪 QA: europe-west6-docker.pkg.dev/beryl3/beryl3/beryl3-webapp:latest
# 🚀 PROD: Production docker image
DOCKER_IMAGE=

# Full database connection string for reference
# 🏠 DEV: Not used
# 🧪 QA: postgresql://beryl3-qa:Qa-Pass123!@34.65.226.196:5432/beryl3-qa
# 🚀 PROD: Production database URL
DATABASE_URL=

# ==============================================================================
# EXTERNAL SERVICE URLS
# ==============================================================================
# URLs for system administration panel links

# Database Administration URL
# 🏠 DEV: http://localhost:8084 (local pgAdmin)
# 🧪 QA: https://console.cloud.google.com/sql
# 🚀 PROD: https://console.cloud.google.com/sql
EXTERNAL_DB_URL=

# Email Testing URL
# 🏠 DEV: http://localhost:9000 (Inbucket web interface)
# 🧪 QA: https://resend.com/dashboard
# 🚀 PROD: https://resend.com/dashboard
EXTERNAL_INBUCKET_URL=

# Monitoring/Alerting URL
# 🏠 DEV: http://localhost:9001 (local Sentry)
# 🧪 QA: Sentry project URL
# 🚀 PROD: Sentry project URL
EXTERNAL_MONITORING_URL=

# Grafana Dashboard URL
# 🏠 DEV: http://localhost:3000
# 🧪 QA: Not used
# 🚀 PROD: Production Grafana URL
EXTERNAL_GRAFANA_URL=

# Loki Log Aggregation URL
# 🏠 DEV: http://localhost:3100
# 🧪 QA: Not used
# 🚀 PROD: Not used
EXTERNAL_LOKI_URL=

# Resend Email Service URL
# 🏠 DEV: https://resend.com/dashboard
# 🧪 QA: https://resend.com/dashboard
# 🚀 PROD: https://resend.com/dashboard
EXTERNAL_RESEND_URL=https://resend.com/dashboard


# ==============================================================================
# EMAIL QUEUE CONFIGURATION
# ==============================================================================
# Django-Post-Office settings for email queue management

# Email processing batch size
# 🏠 DEV: 10 (small batches for development)
# 🧪 QA: 50 (moderate batches for testing)
# 🚀 PROD: 100 (larger batches for efficiency)
POST_OFFICE_BATCH_SIZE=10

# Batch delivery timeout in seconds
# 🏠 DEV: 60 (short timeout for development)
# 🧪 QA: 180 (moderate timeout)
# 🚀 PROD: 300 (longer timeout for reliability)
POST_OFFICE_BATCH_TIMEOUT=60

# Maximum retry attempts for failed emails
# 🏠 DEV: 3
# 🧪 QA: 3
# 🚀 PROD: 5 (more retries for production)
POST_OFFICE_MAX_RETRIES=3

# Minutes between retry attempts
# 🏠 DEV: 5 (quick retries for development)
# 🧪 QA: 15 (standard retry interval)
# 🚀 PROD: 30 (longer interval for production)
POST_OFFICE_RETRY_INTERVAL=5

# Domain for Message-ID header
# 🏠 DEV: beryl3.localdomain
# 🧪 QA: beryl3-qa.mdubiel.org
# 🚀 PROD: beryl.com
POST_OFFICE_MESSAGE_ID_FQDN=beryl3.localdomain

# ==============================================================================
# ENVIRONMENT IDENTIFICATION
# ==============================================================================

# Environment name
# 🏠 DEV: development
# 🧪 QA: qa
# 🚀 PROD: production
ENVIRONMENT=development

# Deployment environment
# 🏠 DEV: development
# 🧪 QA: qa
# 🚀 PROD: production
DEPLOYMENT_ENVIRONMENT=development

# Site name for django-allauth and email templates
# 🏠 DEV: beryl3-dev
# 🧪 QA: beryl3-qa
# 🚀 PROD: beryl3
SITE_NAME=beryl3-dev

# Django Site ID (for django.contrib.sites)
# 🏠 DEV: 1 (default site)
# 🧪 QA: 1 (default site)
# 🚀 PROD: 1 (default site)
SITE_ID=1

# ==============================================================================
# DJANGO INTERNAL SETTINGS
# ==============================================================================
# These are typically set by Django but may be referenced in code

# Django Base Directory (usually set automatically)
# 🏠 DEV: Automatically set by Django
# 🧪 QA: Automatically set by Django  
# 🚀 PROD: Automatically set by Django
# Note: This is a Django internal setting, usually not overridden
BASE_DIR=

# Django Databases Configuration (usually set automatically from DB_ENGINE)
# 🏠 DEV: Automatically configured based on DB_ENGINE
# 🧪 QA: Automatically configured based on DB_ENGINE
# 🚀 PROD: Automatically configured based on DB_ENGINE
# Note: This is built from DB_ENGINE and other database settings
DATABASES=

# Django Media Root (usually set automatically)
# 🏠 DEV: Automatically set by Django
# 🧪 QA: Automatically set by Django
# 🚀 PROD: Automatically set by Django  
# Note: This is typically calculated from BASE_DIR
MEDIA_ROOT=

# ==============================================================================
# DEVELOPMENT-SPECIFIC SETTINGS
# ==============================================================================

# Python path for IDEs
# 🏠 DEV: ${workspaceFolder} (VS Code workspace)
# 🧪 QA: Not used
# 🚀 PROD: Not used
PYTHONPATH=${workspaceFolder}

# ==============================================================================
# NOTES FOR ENVIRONMENT CONFIGURATION
# ==============================================================================
#
# ADDING NEW VARIABLES:
# 1. Add the variable to this golden file first
# 2. Add comprehensive comments explaining the purpose
# 3. Provide environment-specific examples (🏠 DEV, 🧪 QA, 🚀 PROD)
# 4. Run: uv run python workflows/bin/sync-env-files.py [environment]
# 5. Update environment-specific files as needed
# 6. For QA/PROD: Update secrets using update-secrets.py
#
# REMOVING VARIABLES:
# 1. Remove from this golden file
# 2. Run sync script to update environment files
# 3. Archive old secrets (they will be marked for removal)
#
# VALIDATION:
# - Run: uv run python workflows/bin/scan-codebase.py
# - Run: uv run python workflows/bin/verify-parity.py
# - Run: uv run python workflows/bin/compare-envs.py qa prod
#
# ==============================================================================