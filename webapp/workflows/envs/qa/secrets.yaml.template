# QA Environment Secrets Configuration Template
# Copy this file to secrets.yaml and fill in the actual values
# DO NOT commit secrets.yaml to git - it should be in .gitignore

# Project Configuration
project:
  id: "beryl3"
  region: "europe-west4"
  service_account: "beryl3-qa-storage@beryl3.iam.gserviceaccount.com"

# Environment Secrets
secrets:
  # Django Configuration
  - name: "beryl3-qa-secret-key"
    env_var: "SECRET_KEY"
    value: "qa-secret-key-change-this-in-production"
    description: "Django secret key for QA environment"
    
  - name: "beryl3-qa-debug"
    env_var: "DEBUG"
    value: "False"
    description: "Django debug mode setting"
    
  - name: "beryl3-qa-allowed-hosts"
    env_var: "ALLOWED_HOSTS"
    value: "*.run.app,beryl3-qa.example.com,beryl3-qa.mdubiel.org,beryl-qa.mdubiel.org"
    description: "Allowed hosts for Django"
    
  - name: "beryl3-qa-site-domain"
    env_var: "SITE_DOMAIN"
    value: "beryl3-qa.example.com"
    description: "Primary site domain"
    
  - name: "beryl3-qa-csrf-trusted-origins"
    env_var: "CSRF_TRUSTED_ORIGINS"
    value: "https://beryl3-qa-webapp-pd5nkxforq-ez.a.run.app,https://beryl3-qa.mdubiel.org,https://beryl-qa.mdubiel.org"
    description: "CSRF trusted origins for Django"
    
  # Storage Configuration
  - name: "beryl3-qa-use-gcs-storage"
    env_var: "USE_GCS_STORAGE"
    value: "True"
    description: "Enable Google Cloud Storage"
    
  - name: "beryl3-qa-gcs-bucket-name"
    env_var: "GCS_BUCKET_NAME"
    value: "beryl3-qa-bucket"
    description: "GCS bucket name for media/static files"
    
  - name: "beryl3-qa-gcs-project-id"
    env_var: "GCS_PROJECT_ID"
    value: "beryl3"
    description: "GCS project ID"
    
  - name: "beryl3-qa-gcs-location"
    env_var: "GCS_LOCATION"
    value: "media"
    description: "GCS storage location path"
    
  - name: "beryl3-qa-static-url"
    env_var: "STATIC_URL"
    value: "https://storage.googleapis.com/beryl3-qa-bucket/static/"
    description: "Static files URL"
    
  - name: "beryl3-qa-media-url"
    env_var: "MEDIA_URL"
    value: "https://storage.googleapis.com/beryl3-qa-bucket/media/"
    description: "Media files URL"
    
  # Application Configuration
  - name: "beryl3-qa-environment"
    env_var: "ENVIRONMENT"
    value: "qa"
    description: "Environment identifier"
    
  - name: "beryl3-qa-deployment-environment"
    env_var: "DEPLOYMENT_ENVIRONMENT"
    value: "qa"
    description: "Deployment environment identifier"
    
  - name: "beryl3-qa-application-activity-logging"
    env_var: "APPLICATION_ACTIVITY_LOGGING"
    value: "True"
    description: "Enable application activity logging"
    
  # Database Configuration
  - name: "beryl3-qa-pg-db"
    env_var: "PG_DB"
    value: "beryl3-qa"
    description: "PostgreSQL database name"
    
  - name: "beryl3-qa-pg-user"
    env_var: "PG_USER"
    value: "beryl3-qa"
    description: "PostgreSQL username"
    
  - name: "beryl3-qa-pg-password"
    env_var: "PG_PASSWORD"
    value: "Qa-Pass123!"
    description: "PostgreSQL password - CHANGE IN PRODUCTION"
    
  - name: "beryl3-qa-pg-host-webapp"
    env_var: "PG_HOST"
    value: "/cloudsql/beryl3:europe-west6:beryl3-qa"
    description: "Database host path for webapp (unix socket)"
    context: "webapp"
    
  - name: "beryl3-qa-pg-host-jobs"
    env_var: "PG_HOST"
    value: "/cloudsql/beryl3:europe-west6:beryl3-qa"
    description: "Database host path for jobs (unix socket)"
    context: "jobs"
    
  - name: "beryl3-qa-pg-port"
    env_var: "PG_PORT"
    value: "5432"
    description: "PostgreSQL port"
    
  - name: "beryl3-qa-db-engine"
    env_var: "DB_ENGINE"
    value: "django.db.backends.postgresql"
    description: "Django database engine"
    
  # Email Configuration (Resend)
  - name: "beryl3-qa-email-host"
    env_var: "EMAIL_HOST"
    value: "smtp.resend.com"
    description: "SMTP server for Resend"
    
  - name: "beryl3-qa-email-port"
    env_var: "EMAIL_PORT"
    value: "587"
    description: "SMTP port for Resend"
    
  - name: "beryl3-qa-email-use-tls"
    env_var: "EMAIL_USE_TLS"
    value: "True"
    description: "Use TLS for SMTP"
    
  - name: "beryl3-qa-email-host-user"
    env_var: "EMAIL_HOST_USER"
    value: "resend"
    description: "SMTP username for Resend"
    
  - name: "beryl3-qa-email-host-password"
    env_var: "EMAIL_HOST_PASSWORD"
    value: "YOUR_RESEND_API_KEY_HERE"
    description: "Resend API key - CHANGE THIS"
    
  - name: "beryl3-qa-default-from-email"
    env_var: "DEFAULT_FROM_EMAIL"
    value: "noreply@mdubiel.org"
    description: "Default from email address"

# Cloud Run Configuration
cloud_run:
  webapp:
    service_name: "beryl3-qa-webapp"
    image: "europe-west6-docker.pkg.dev/beryl3/beryl3/beryl3-webapp:latest"
    region: "europe-west4"
    
  jobs:
    image: "europe-west6-docker.pkg.dev/beryl3/beryl3/beryl3-webapp:latest"
    region: "europe-west4"
    cloudsql_instances: "beryl3:europe-west6:beryl3-qa"
    
    # Job definitions
    job_definitions:
      - name: "beryl3-qa-migrate"
        command: ["uv", "run", "python", "manage.py", "migrate", "--noinput"]
        description: "Database migrations"
        
      - name: "beryl3-qa-collectstatic"
        command: ["uv", "run", "python", "manage.py", "collectstatic", "--noinput", "--clear"]
        description: "Collect static files"
        
      - name: "beryl3-qa-seed"
        command: ["uv", "run", "python", "manage.py", "seed_data"]
        description: "Create regular user and seed initial data"
        
      - name: "beryl3-qa-setup-initial-users"
        command: ["uv", "run", "python", "manage.py", "setup_initial_users"]
        description: "Setup initial users"

# Docker Configuration
docker:
  registry: "europe-west6-docker.pkg.dev/beryl3/beryl3"
  images:
    webapp: "beryl3-webapp"  # Unified image for both webapp and jobs