# Project-specific Nginx configuration for {{ project_name }}
# This runs inside Docker container and serves to the main host Nginx proxy

upstream {{ project_name }}_backend {
    server web:8000;
}

# Rate limiting
limit_req_zone $binary_remote_addr zone={{ project_name }}_rate_limit:10m rate=10r/s;

# Enable nginx status for monitoring
server {
    listen 80;
    server_name localhost;
    
    location /nginx_status {
        stub_status on;
        access_log off;
        allow 127.0.0.1;
        allow 10.0.0.0/8;
        allow 172.16.0.0/12;
        allow 192.168.0.0/16;
        deny all;
    }
}

# Main HTTP server (no SSL, handled by host proxy)
server {
    listen 80;
    server_name {{ project_config.domain }} localhost;

    # Security Headers (basic ones, main ones handled by host proxy)
    add_header X-Frame-Options SAMEORIGIN always;
    add_header X-Content-Type-Options nosniff always;

    # Gzip Compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/xml+rss application/javascript application/json;

    # Client settings
    client_max_body_size {{ nginx.client_max_body_size | default('100M') }};
    keepalive_timeout {{ nginx.keepalive_timeout | default(65) }};

    # Rate limiting
    limit_req zone={{ project_name }}_rate_limit burst=20 nodelay;

    # Static files
    location /static/ {
        alias /var/www/static/;
        expires 1y;
        add_header Cache-Control "public, immutable";
        
        # Optional: serve compressed files
        location ~* \.(css|js)$ {
            gzip_static on;
        }
    }

    # Media files
    location /media/ {
        alias /var/www/media/;
        expires 1M;
        add_header Cache-Control "public";
    }

    # Favicon
    location = /favicon.ico {
        alias /var/www/static/favicon.ico;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    # Robots.txt
    location = /robots.txt {
        alias /var/www/static/robots.txt;
        expires 1d;
    }

    # Health check endpoint
    location /health/ {
        proxy_pass http://{{ project_name }}_backend;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        access_log off;
    }

    # Main application
    location / {
        proxy_pass http://{{ project_name }}_backend;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Timeout settings
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # Buffer settings
        proxy_buffering on;
        proxy_buffer_size 8k;
        proxy_buffers 8 8k;
        
        # WebSocket support (if needed)
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    # Deny access to sensitive files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    location ~ ~$ {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Custom error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /50x.html {
        root /var/www/html;
        internal;
    }
}