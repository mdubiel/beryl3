# Nginx configuration for Beryl3 application
# Domain: {{ app_domain }}

upstream beryl3_backend {
    server {{ ansible_host }}:{{ app_port }};
}

server {
    listen 80;
    server_name {{ app_domain }};
    
    # Redirect HTTP to HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    server_name {{ app_domain }};

    # SSL Configuration (replace with actual certificates)
    ssl_certificate /etc/nginx/ssl/{{ app_domain }}.crt;
    ssl_certificate_key /etc/nginx/ssl/{{ app_domain }}.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;

    # Security Headers
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # Client upload limit
    client_max_body_size 10M;

    # Static files (served directly by nginx)
    location /static/ {
        alias {{ app_root }}/static/;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    # Media files (served directly by nginx)
    location /media/ {
        alias {{ app_root }}/media/;
        expires 1y;
        add_header Cache-Control "public";
    }

    # Favicon
    location /favicon.ico {
        alias {{ app_root }}/static/favicon.ico;
        expires 1y;
    }

    # Health check endpoint
    location /health {
        access_log off;
        proxy_pass http://beryl3_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Main application
    location / {
        proxy_pass http://beryl3_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket support (if needed)
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # Logging
    access_log /var/log/nginx/{{ app_domain }}_access.log;
    error_log /var/log/nginx/{{ app_domain }}_error.log;
}