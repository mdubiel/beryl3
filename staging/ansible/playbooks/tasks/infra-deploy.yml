---
# Infrastructure Deployment Tasks
# Full deployment including configuration and container startup

- name: Create infrastructure directories
  file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
    owner: "{{ ansible_user }}"
    group: docker
  loop:
    - "{{ shared_data_path }}/nginx/config"
    - "{{ shared_data_path }}/nginx/ssl"
    - "{{ shared_data_path }}/prometheus/data"
    - "{{ shared_data_path }}/prometheus/config"
    - "{{ shared_data_path }}/grafana/data"
    - "{{ shared_data_path }}/grafana/config"
    - "{{ shared_data_path }}/grafana/dashboards"
    - "{{ shared_data_path }}/grafana/provisioning/dashboards"
    - "{{ shared_data_path }}/grafana/provisioning/datasources"
    - "{{ shared_data_path }}/loki/data"
    - "{{ shared_data_path }}/loki/config"
    - "{{ shared_data_path }}/alertmanager/data"
    - "{{ shared_data_path }}/alertmanager/config"
    - "{{ shared_data_path }}/promtail/config"
    - "{{ shared_data_path }}/registry/data"
    - "{{ shared_data_path }}/registry/config"
    - "{{ shared_data_path }}/registry/auth"
    - "{{ shared_data_path }}/blackbox/config"
    - "{{ shared_data_path }}/nginx-exporter/config"

- name: Generate infrastructure configurations
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: '0644'
    owner: "{{ ansible_user }}"
    group: docker
  loop:
    - { src: "../roles/shared-monitoring/templates/prometheus.yml.j2", dest: "{{ shared_data_path }}/prometheus/config/prometheus.yml" }
    - { src: "../roles/shared-monitoring/templates/loki.yml.j2", dest: "{{ shared_data_path }}/loki/config/loki.yml" }
    - { src: "../roles/shared-monitoring/templates/promtail.yml.j2", dest: "{{ shared_data_path }}/promtail/config/promtail.yml" }
    - { src: "../roles/shared-monitoring/templates/grafana.ini.j2", dest: "{{ shared_data_path }}/grafana/config/grafana.ini" }
    - { src: "../roles/shared-monitoring/templates/grafana-datasources.yml.j2", dest: "{{ shared_data_path }}/grafana/provisioning/datasources/datasources.yml" }
    - { src: "../roles/shared-monitoring/templates/grafana-dashboards.yml.j2", dest: "{{ shared_data_path }}/grafana/provisioning/dashboards/dashboards.yml" }
    - { src: "../roles/shared-monitoring/templates/alertmanager.yml.j2", dest: "{{ shared_data_path }}/alertmanager/config/alertmanager.yml" }

- name: Generate nginx proxy configuration
  template:
    src: ../playbooks/templates/staging-proxy.conf.j2
    dest: "{{ shared_data_path }}/nginx/config/default.conf"
    mode: '0644'
    owner: "{{ ansible_user }}"
    group: docker

- name: Generate registry htpasswd file
  shell: |
    echo "registry:$(openssl passwd -6 '{{ registry_password | default("registry123") }}')" > {{ shared_data_path }}/registry/auth/htpasswd
    chown {{ ansible_user }}:docker {{ shared_data_path }}/registry/auth/htpasswd
    chmod 644 {{ shared_data_path }}/registry/auth/htpasswd
  args:
    creates: "{{ shared_data_path }}/registry/auth/htpasswd"

- name: Generate Registry configuration
  copy:
    content: |
      version: 0.1
      log:
        fields:
          service: registry
      storage:
        cache:
          blobdescriptor: inmemory
        filesystem:
          rootdirectory: /var/lib/registry
      http:
        addr: :5000
        headers:
          X-Content-Type-Options: [nosniff]
          Access-Control-Allow-Origin: ['http://192.168.1.14:8082']
          Access-Control-Allow-Methods: ['HEAD', 'GET', 'OPTIONS', 'DELETE']
          Access-Control-Allow-Headers: ['Authorization', 'Accept', 'Cache-Control']
          Access-Control-Max-Age: [1728000]
          Access-Control-Allow-Credentials: [true]
          Access-Control-Expose-Headers: ['Docker-Content-Digest']
      auth:
        htpasswd:
          realm: basic-realm
          path: /auth/htpasswd
      health:
        storagedriver:
          enabled: true
          interval: 10s
          threshold: 3
    dest: "{{ shared_data_path }}/registry/config/config.yml"
    mode: '0644'
    owner: "{{ ansible_user }}"
    group: docker

- name: Set correct permissions for data directories
  file:
    path: "{{ item.path }}"
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
    mode: "{{ item.mode }}"
    state: directory
    recurse: true
  loop:
    - { path: "{{ shared_data_path }}/grafana/data", owner: "472", group: "472", mode: "0755" }
    - { path: "{{ shared_data_path }}/prometheus/data", owner: "65534", group: "65534", mode: "0755" }
    - { path: "{{ shared_data_path }}/loki/data", owner: "10001", group: "10001", mode: "0755" }
    - { path: "{{ shared_data_path }}/registry/data", owner: "{{ ansible_user }}", group: "docker", mode: "0755" }

- name: Create Docker networks
  community.docker.docker_network:
    name: "{{ item }}"
    state: present
  loop:
    - monitoring
    - projects
    - registry

- name: Pull infrastructure Docker images
  community.docker.docker_image:
    name: "{{ item }}"
    source: pull
    state: present
  loop:
    - nginx:alpine
    - prom/prometheus:latest
    - grafana/grafana:latest
    - grafana/loki:latest
    - prom/alertmanager:latest
    - prom/node-exporter:latest
    - gcr.io/cadvisor/cadvisor:latest
    - grafana/promtail:latest
    - registry:2
    - prom/blackbox-exporter:latest
    - nginx/nginx-prometheus-exporter:latest
    - joxit/docker-registry-ui:2.0
    - adminer:latest

- name: Start infrastructure containers
  include_tasks: infra-start.yml