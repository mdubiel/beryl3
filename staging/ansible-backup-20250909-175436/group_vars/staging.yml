---
# Staging environment specific variables

# Connection settings
staging_user: ansible
staging_server_ip: 192.168.1.14
ssh_key_path: ~/.ssh/ansible_staging

# Environment identification
deployment_environment: staging
debug_enabled: false

# Server configuration
server_name: staging-server
domain_suffix: staging.mdubiel.org
shared_data_path: /opt/shared
shared_services_enabled: true
metrics_retention_days: 30
log_retention_days: 14

# Shared services configuration
shared_services:
  grafana:
    enabled: true
    port: 3000
    admin_user: admin
    admin_password: "admin123"
    data_path: "{{ shared_data_path }}/grafana/data"
    config_path: "{{ shared_data_path }}/grafana/config"
    
  prometheus:
    enabled: true
    port: 9090
    data_path: "{{ shared_data_path }}/prometheus/data"
    config_path: "{{ shared_data_path }}/prometheus/config"
    retention_time: "{{ metrics_retention_days }}d"
    scrape_interval: 15s
    
  loki:
    enabled: true
    port: 3100
    data_path: "{{ shared_data_path }}/loki/data"
    config_path: "{{ shared_data_path }}/loki/config"
    retention_period: "{{ log_retention_days * 24 }}h"
    
  alertmanager:
    enabled: true
    port: 9093
    config_path: "{{ shared_data_path }}/alertmanager/config"
    
  node_exporter:
    enabled: true
    port: 9100
    
  promtail:
    enabled: true
    port: 9080
    config_path: "{{ shared_data_path }}/promtail/config"

# Project configuration template
project_defaults:
  python_version: "3.11"
  uv_version: "latest"
  postgresql_version: "15"
  redis_version: "7"
  nginx_version: "latest"
  
  # Paths
  project_root: "/opt/projects"
  venv_path: ".venv"
  static_root: "webapp/staticfiles"
  media_root: "webapp/media"
  
  # Django settings
  django_secret_key: "{{ vault_django_secret_key }}"
  django_debug: false
  django_allowed_hosts: "{{ domain_suffix }}"
  
  # Database settings
  db_name: "{{ project_name }}_staging"
  db_user: "{{ project_name }}_user"
  db_password: "{{ vault_db_password }}"
  db_host: localhost
  
  # Email settings (using local mail catcher for staging)
  email_backend: django.core.mail.backends.smtp.EmailBackend
  email_host: localhost
  email_port: 1025
  email_use_tls: false
  email_from: "noreply@{{ domain_suffix }}"

# Nginx configuration
nginx:
  user: www-data
  worker_processes: auto
  worker_connections: 1024
  keepalive_timeout: 65
  client_max_body_size: 100M
  
  # SSL configuration
  ssl_protocols: "TLSv1.2 TLSv1.3"
  ssl_ciphers: "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384"
  ssl_prefer_server_ciphers: false

# System service configuration
systemd_services:
  reload_daemon: true
  enable_services: true
  start_services: true

# Log configuration
log_config:
  log_level: INFO
  log_format: json
  log_rotation: daily
  log_compress: true