version: '3.8'

networks:
  monitoring:
    name: monitoring
    driver: bridge
  projects:
    name: projects 
    driver: bridge

volumes:
  prometheus_data:
  grafana_data:
  loki_data:

services:
  # Main Reverse Proxy
  nginx-proxy:
    image: nginx:alpine
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - {{ shared_data_path }}/nginx/config:/etc/nginx/conf.d:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - /var/www/html:/var/www/html:ro
    networks:
      - monitoring
      - projects
    restart: unless-stopped
    depends_on:
      - grafana
      - prometheus

  # Prometheus
  prometheus:
    image: prom/prometheus:v2.45.0
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - {{ shared_data_path }}/prometheus/config:/etc/prometheus:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time={{ shared_services.prometheus.retention_time | default("30d") }}'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
    networks:
      - monitoring
      - projects
    restart: unless-stopped

  # Grafana
  grafana:
    image: grafana/grafana:10.0.0
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - {{ shared_data_path }}/grafana/config/grafana.ini:/etc/grafana/grafana.ini:ro
    environment:
      - GF_SECURITY_ADMIN_PASSWORD={{ shared_services.grafana.admin_password }}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    networks:
      - monitoring
    restart: unless-stopped

  # Loki
  loki:
    image: grafana/loki:2.9.0
    container_name: loki
    ports:
      - "3100:3100"
    volumes:
      - {{ shared_data_path }}/loki/config:/etc/loki:ro
      - loki_data:/loki
    command: -config.file=/etc/loki/loki.yml
    networks:
      - monitoring
      - projects
    restart: unless-stopped

  # Promtail
  promtail:
    image: grafana/promtail:2.9.0
    container_name: promtail
    volumes:
      - {{ shared_data_path }}/promtail/config:/etc/promtail:ro
      - /var/log:/var/log:ro
      - /opt/projects:/opt/projects:ro
    command: -config.file=/etc/promtail/promtail.yml
    networks:
      - monitoring
      - projects
    restart: unless-stopped

  # Node Exporter
  node-exporter:
    image: prom/node-exporter:v1.6.0
    container_name: node-exporter
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    networks:
      - monitoring
    restart: unless-stopped

  # cAdvisor for container metrics
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.0
    container_name: cadvisor
    ports:
      - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    devices:
      - /dev/kmsg:/dev/kmsg
    networks:
      - monitoring
    restart: unless-stopped

  # AlertManager
  alertmanager:
    image: prom/alertmanager:v0.25.0
    container_name: alertmanager
    ports:
      - "9093:9093"
    volumes:
      - {{ shared_data_path }}/alertmanager/config:/etc/alertmanager:ro
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
      - '--web.external-url=http://{{ inventory_hostname }}:9093'
    networks:
      - monitoring
    restart: unless-stopped