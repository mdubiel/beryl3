---
# Docker-based shared monitoring services
- name: Install Docker (Arch Linux)
  pacman:
    name:
      - docker
      - docker-compose
    state: present
  when: ansible_os_family == "Archlinux"

- name: Install Docker (Debian/Ubuntu)
  apt:
    name:
      - docker.io
      - docker-compose
    state: present
    update_cache: true
  when: ansible_os_family == "Debian"

- name: Start and enable Docker service
  systemd:
    name: docker
    state: started
    enabled: true

- name: Add deploy user to docker group
  user:
    name: "{{ ansible_user }}"
    groups: docker
    append: true

- name: Create monitoring directories
  file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
    owner: "{{ ansible_user }}"
    group: docker
  loop:
    - "{{ shared_data_path }}"
    - "{{ shared_data_path }}/prometheus/data"
    - "{{ shared_data_path }}/prometheus/config"
    - "{{ shared_data_path }}/grafana/data"
    - "{{ shared_data_path }}/grafana/config"
    - "{{ shared_data_path }}/loki/data"
    - "{{ shared_data_path }}/loki/config"
    - "{{ shared_data_path }}/alertmanager/data"
    - "{{ shared_data_path }}/alertmanager/config"
    - "{{ shared_data_path }}/nginx/config"

- name: Generate Prometheus configuration
  template:
    src: prometheus.yml.j2
    dest: "{{ shared_data_path }}/prometheus/config/prometheus.yml"
    mode: '0644'
    owner: "{{ ansible_user }}"
    group: docker

- name: Generate Loki configuration
  template:
    src: loki.yml.j2
    dest: "{{ shared_data_path }}/loki/config/loki.yml"
    mode: '0644'
    owner: "{{ ansible_user }}"
    group: docker

- name: Generate Grafana configuration
  template:
    src: grafana.ini.j2
    dest: "{{ shared_data_path }}/grafana/config/grafana.ini"
    mode: '0644'
    owner: "{{ ansible_user }}"
    group: docker

- name: Generate AlertManager configuration
  template:
    src: alertmanager.yml.j2
    dest: "{{ shared_data_path }}/alertmanager/config/alertmanager.yml"
    mode: '0644'
    owner: "{{ ansible_user }}"
    group: docker

- name: Generate monitoring docker-compose file
  template:
    src: docker-compose-monitoring.yml.j2
    dest: "{{ shared_data_path }}/docker-compose.yml"
    mode: '0644'
    owner: "{{ ansible_user }}"
    group: docker
  notify: restart monitoring stack

- name: Pull monitoring Docker images
  shell: |
    cd {{ shared_data_path }}
    docker-compose pull
  become_user: "{{ ansible_user }}"

- name: Start monitoring stack
  shell: |
    cd {{ shared_data_path }}
    docker-compose up -d
  become_user: "{{ ansible_user }}"