# Main Nginx configuration for staging server
# This handles routing to both monitoring and project services

upstream grafana {
    server 127.0.0.1:3000;
}

upstream prometheus {
    server 127.0.0.1:9090;
}

upstream beryl3 {
    server 127.0.0.1:8080;
}

# HTTP to HTTPS redirect
server {
    listen 80 default_server;
    server_name _;
    return 301 https://$host$request_uri;
}

# Monitoring services
server {
    listen 443 ssl http2;
    server_name grafana.{{ domain_suffix }};

    # SSL configuration
    ssl_certificate /etc/letsencrypt/live/{{ domain_suffix }}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/{{ domain_suffix }}/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers off;

    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;

    location / {
        proxy_pass http://grafana;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_buffering off;
    }
}

server {
    listen 443 ssl http2;
    server_name prometheus.{{ domain_suffix }};

    # SSL configuration
    ssl_certificate /etc/letsencrypt/live/{{ domain_suffix }}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/{{ domain_suffix }}/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers off;

    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;

    # Basic auth for Prometheus (optional)
    # auth_basic "Prometheus";
    # auth_basic_user_file /etc/nginx/.htpasswd;

    location / {
        proxy_pass http://prometheus;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

# Project services
server {
    listen 443 ssl http2;
    server_name beryl3.{{ domain_suffix }};

    # SSL configuration
    ssl_certificate /etc/letsencrypt/live/{{ domain_suffix }}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/{{ domain_suffix }}/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers off;

    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options SAMEORIGIN always;
    add_header X-Content-Type-Options nosniff always;

    # Client max body size for file uploads
    client_max_body_size 100M;

    location / {
        proxy_pass http://beryl3;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_buffering off;
        
        # WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
}

# Monitoring dashboard (combined services)
server {
    listen 443 ssl http2;
    server_name monitoring.{{ domain_suffix }};

    # SSL configuration
    ssl_certificate /etc/letsencrypt/live/{{ domain_suffix }}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/{{ domain_suffix }}/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers off;

    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;

    # Default to Grafana
    location / {
        return 302 https://grafana.{{ domain_suffix }};
    }
}